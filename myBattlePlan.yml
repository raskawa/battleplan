---
- hosts: localhost

  tasks:
    - name: print from playbook
      debug: msg="in playbooks/playbook.yml as user {{ lookup('env','USER') }}"

# ANSIBLE INSTALL SUB-PLAYBOOKS BELOW
    - include: ansible-osx/homebrew.yml                 #must come before any use of homebrew module
#    - include: ansible-osx/macports.yml #issue: not right osx version        #must come before any use of macports module
    - include: ansible-osx/oh-my-zsh.yml
    - include: ansible-osx/cask.yml
#    - include: ansible-osx/atom.yml # issue: zip/file download issue
    - include: ansible-osx/chrome-stable.yml
    - include: ansible-osx/dropbox.yml
    - include: ansible-osx/evernote.yml
    - include: ansible-osx/kaleidoscope.yml
    - include: ansible-osx/skype.yml
    - include: ansible-osx/webstorm.yml
#       - include: ansible-osx/sshfs.yml
#       - include: ansible-osx/flux.yml
#    - include: ansible-osx/github.yml #issue
    - include: ansible-osx/gitx.yml
    - include: ansible-osx/iterm2.yml
    - include: ansible-osx/sublime3.yml
    - include: ansible-osx/vagrant.yml
    - include: ansible-osx/virtualbox.yml
#    - include: ansible-osx/alfred.yml # issue
#       - include: ansible-osx/chrome-beta.yml
#       - include: ansible-osx/chrome-canary.yml
#    - include: ansible-osx/karabiner.yml #issue: package not valid
#       - include: ansible-osx/intellij-idea-ultimate15.yml
#       - include: ansible-osx/java7.yml
#       - include: ansible-osx/java6.yml
    - include: ansible-osx/better-touch-tool.yml
#       - include: ansible-osx/adium.yml
#       - include: ansible-osx/libreoffice.yml
#       - include: ansible-osx/seil.yml
#       - include: ansible-osx/spectacle.yml
#       - include: ansible-osx/sequel-pro.yml
    - include: ansible-osx/skype.yml
#       - include: ansible-osx/truecrypt.yml
#       - include: ansible-osx/usb-overdrive.yml
    - include: ansible-osx/xtra-finder.yml

    - name: easy install pip
      easy_install: name=pip
      sudo: yes

# PIP INSTALLS BELOW
    - name: install apps from pip
      pip: name={{item}} state=latest
      sudo: yes
      with_items:
          - virtualenv
          # - cliff
#          - pyyaml
#          - awscli

# HOMEBREW TAPS BELOW
    - name: install homebrew_taps
      homebrew_tap: tap={{item}} state=present
      with_items:
          - gapple/services
          # - pivotal/tap
          - caskroom/cask
          - homebrew/dupes

# HOMEBREW INSTALLS BELOW
    - name: install apps from homebrew
      sudo: false
      homebrew: name={{item}} state=present update_homebrew=yes
      with_items:
          - coreutils
          - gpg
          - gzip
          - wget
          # - maven
          # - dos2unix
          # - tomcat
          - ctags
          # - dnsmasq
          - httpie
          - mackup
          - autojump
          - docker
          - docker-machine
          - jq
          # - node
          # - rbenv
          # - ruby
          # - redis
          # - mongodb
          # - rabbitmq
          # - zookeeper
          # - cloudfoundry-cli
          - brew-cask
          #from paulmillr dotfiles
#          - suspicious-package

# HOMEBREW CASK INSTALLS BELOW
    - name: install apps from homebrew cask
      sudo: false
      homebrew_cask: name={{item}} state=present # update_homebrew=yes
      with_items:
          - quicklook-json
          - qlmarkdown
          - qlstephen
          - qlcolorcode
          # my others
#          - navicat-premium #issue - 2.9 sha did not match..

# Here is how to install nvm and node in an Ansible task.
# I tried a bunch of different things, and as usual it's simple, but you have to get it right.
# The important part is that you have to shell with /bin/bash -c and source nvm.sh
    - name: Install nvm
      shell: >
        curl https://raw.githubusercontent.com/creationix/nvm/v0.7.0/install.sh | sh
        creates=/home/{{ ansible_user_id }}/.nvm/nvm.sh

    - name: Install node and set version
      shell: >
        source ~/.nvm/nvm.sh && nvm install 5.0.0 && nvm alias default 5.0.0
#        creates=/home/{{ ansible_user_id }}/.nvm/alias

# NPM GLOBAL INSTALLS BELOW
    # requires node/npm from above
    - name: install global apps from npm
      npm: name={{item}} global=yes
      with_items:
          - grunt-cli

# BELOW IS OTHER BATTLEPLAN FINAL ACTIONS

# Executes the mac preferences/settings file.
    - name: 'execute mac settings script'
      script: ./osx-config-BattlePlan.sh

# Add any additional files in the toCopy directory here.
    - name: 'copy .zchrc'
      shell: >
        cp toCopy/.zshrc ~

    - name: 'copy gitconfig'
      shell: >
        cp toCopy/.gitconfig ~





# OLD FROM BATTLEPLANS ORIGINAL FILE
#   - name: install gvm the Groovy enVironment Manager
#      mac_pkg: pkg_type=script script_creates=/usr/local/bin/gvm
#               script_prefix="echo | " script_exe=bash
#               url=http://get.gvmtool.net

#    - name: create homdir symlinks
#      file: src={{item.from}} dest={{item.to}} state=link
#      sudo: no
#      with_items:
#         # ~/Dropbox/ubuntu/* is now deprecated for Mackup and ~/Dropbox/Mackup
#         - from: ~/Dropbox/mac/bin
#           to: ~/bin

#      copy: src='./.zshrc' dest='~/.zshrc'
#      copy: src='./.gitconfig' dest='~/.gitconfig'

# create symlinks - broken, figure out how to create this directory before next command...
#    - name: create local /bin
#      directory: "~/bin"

#    - name: create symlinks for sublime / webstorm
#      file: src="/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" dest="~/bin/subl" state=link

      #
#    - name: Install z.sh
#      get_url: url=https://raw.githubusercontent.com/rupa/z/master/z.sh dest=/usr/local/share/zsh/ mode=0755
#
#    - name: Install z.sh
#      get_url: url=https://raw.githubusercontent.com/rupa/z/master/z.1 dest=/usr/local/share/man/man1/


#    - name: install gems
#      gem: name={{item}} state=latest
#      with_items:
#          - brewbygems
#          - bundler
#          - compass
